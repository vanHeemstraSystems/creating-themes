[
  {
    "objectID": "SUMMARY.html",
    "href": "SUMMARY.html",
    "title": "Learning - Themes",
    "section": "",
    "text": "Table of contents\n\nLearning - Themes"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Learning - Themes",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n__page = hostedOnThumbtools()\n  ? pageRenderer(graphData, width, height, false)\n  : pageRenderer(graphData, width, 800, true)\n\n\n\n\n\n\n\nviewof linkColor = color({\n  value: \"#aaaaaa\",\n  title: \"Link Color\"\n})\n\n\n\n\n\n\n\nviewof backgroundColor = color({\n  // value: d3.color(\"rgb(253, 242, 208)\").hex(),\n  value: \"#ffffff\", // \"#f7f7f7\", //\"#f2f0e6\",\n  title: \"Background Color\"\n})\n\n\n\n\n\n\n\ndepthSizeScale = d3\n  .scalePow()\n  .exponent(0.7)\n  .domain([0, maxDepth])\n  .range([1, 0.6])\n\n\n\n\n\n\n\nstrokeWidth = 4\n\n\n\n\n\n\n\nimageSize = 140\n\n\n\n\n\n\n\ndepthThickScale = d3.scaleLinear().domain([0, maxDepth - 1]).range([10, 5])\n\n\n\n\n\n\n\npageRenderer = (data, width, height, isTest = false) => {\n  const svg = DOM.svg(width, height);\n  \n  d3.select(svg)\n    .style('width', '100%')\n    .style('height', '100%');\n  \n  const style = isTest \n    ? 'height: ${height / 4}px;'\n    : `\n      position: absolute;\n      top: 0px;\n      bottom: 0px;\n      left: 0px;\n      right: 0px;\n    `;\n  const container = html`\n    <div style=\"\n      font-family: 'Montserrat', sans-serif;\n      background-color: ${backgroundColor};\n      ${style};\n    \">\n      <link rel='stylesheet' href='https://unpkg.com/wa-mediabox@1.0.1/dist/wa-mediabox.min.css'/> \n      <link href=\"https://fonts.googleapis.com/css?family=Montserrat\" rel=\"stylesheet\">\n      <style>\n        .__wa-mediabox-open {\n          visibility: hidden;\n        }\n\n        .wa-mediabox-frame .wa-mediabox-close {\n            right: 4px;\n            top: 4px;\n            width: 36px;\n            height: 36px;\n          transform: scale(${isMoble ? 3 : 0.9});\n        } \n\n        .wa-mediabox-frame {\n          top: 40%;\n          transform: scale(0.904);\n        }\n\n        .wa-mediabox-frame, .wa-mediabox-container {\n          border-top-left-radius: 5px;\n          border-top-right-radius: 5px;\n        } \n        .wa-mediabox-title {\n          font-family: 'Montserrat', sans-serif;\n          font-size: 16px;\n          background: ${backgroundColor}; \n          color: #555;\n          top: 100%;\n          bottom: auto;\n          border-bottom-left-radius: 5px;\n          border-bottom-right-radius: 5px;\n        }\n\n        .wa-mediabox-frame.loaded.has-title .wa-mediabox-title {\n          padding: 4px 14px 20px 14px;\n          user-select: all;\n        }\n\n        .wa-mediabox-title a:link, .wa-mediabox-title a:visited {\n          text-decoration: none;\n          cursor: pointer;\n          font-weight: bold;\n          color: rgb(72, 128, 184);\n        }\n\n      </style>\n\n      ${svg}\n    </div>`;\n\n  renderGraph(data, d3.select(svg), width, height);\n  return container;\n}\n\n\n\n\n\n\n\nrenderGraph = (data, svg, width, height) => {\n  const links = data.links.map(d => Object.create(d));\n  const nodes = data.nodes.map(d => Object.create(d));\n \n  const defs = svg.append('defs');\n  defs\n    .append('svg:clipPath')\n    .attr('id', 'circle-clip')\n    .append('svg:circle')\n    .attr('cx', 0)\n    .attr('cy', 0)\n    .attr('r', imageSize / 2);\n\n  const linkForce = d3\n    .forceLink(links)\n    .id(d => d.title)\n    .distance(d => depthSizeScale(d.source.depth) * imageSize * 1.1)\n    .strength(0.8);\n    \n  const collideForce = d3.forceCollide()\n      .radius(d => imageSize / 2 * depthSizeScale(d.depth));      \n\n  const simulation = d3.forceSimulation(nodes)\n      .force(\"link\", linkForce)\n      .force(\"charge\", d3.forceManyBody().strength(-800))\n      .force(\"center\", d3.forceCenter(width / 2, height / 2))\n      .tick(80)\n      .force('collide', collideForce)\n\n  const link = svg.append(\"g\")\n    .attr(\"stroke\", linkColor)\n    .attr('fill', 'none')\n    .selectAll(\".link\")\n    .data(links)\n    .join(\"path\")\n    .classed('link', true)\n    .attr('stroke-linecap', 'round')\n    .attr(\"stroke-width\", d => depthThickScale(d.source.depth));\n\n  const node = svg.append('g')\n    .selectAll('.node')\n    .data(nodes)\n    .join('g')\n    .attr('id', d => d.title)\n    .classed('node', true)\n    .style('cursor', 'pointer')\n    .call(drag(simulation))\n    .call(renderNode);\n\n  \n  const vertPath = (x0, y0, x1, y1) => `M ${x0} ${y0} C ${x1} ${y0} ${x0} ${y1}  ${x1} ${y1}`;\n  const horzPath = (x0, y0, x1, y1) => `M ${x0} ${y0} C ${x0} ${y1}  ${x1} ${y0}  ${x1} ${y1}`;\n  \n  const pathPatternLut = [horzPath, vertPath, horzPath, vertPath];\n\n  const linkPath = ({ source: { x: x0, y: y0 }, target: { x: x1, y: y1 } }) => {\n    const quadrant = Math.round((Math.PI * 1.5 + Math.atan2(y0 - y1, x0 - x1)) \n                                / (Math.PI / 2)) % 4;\n    return pathPatternLut[quadrant](x0, y0, x1, y1);\n  };\n\n  simulation.on(\"tick\", () => {\n    link.attr('d', linkPath);\n    node.attr('transform', d => `translate(${d.x}, ${d.y}) scale(${depthSizeScale(d.depth)})`);\n  });\n\n  invalidation.then(() => simulation.stop());\n}\n\n\n\n\n\n\n\nrenderNode = (node) => {\n  node\n    .append(\"circle\")\n    .attr(\"href\", (d) => d.img)\n    .attr(\"r\", imageSize * 0.5 + strokeWidth / 2)\n    .attr(\"data-mediabox\", \"all\") //(d) => d.group || \"my-gallery-name\")\n    .attr(\"data-title\", (d) => \"--\")\n    .attr(\"fill\", \"rgba(255, 255, 255, 1)\")\n    .attr(\"stroke\", linkColor)\n    .attr(\"stroke-width\", strokeWidth)\n    .each(function eachCall(d) {\n      WAMediaBox.bind(d3.select(this).node(), (container) => {\n        container.innerHTML = \"\";\n        container.appendChild(renderBlurb(d));\n      });\n    });\n\n  node\n    .filter((d) => d.img)\n    .append(\"image\")\n    .attr(\"clip-path\", \"url(#circle-clip)\")\n    .attr(\n      \"xlink:href\",\n      (d) => `${d.img.split(\"=\")[0]}=${d.aspect < 1 ? \"h\" : \"w\"}${imageSize}-no`\n    )\n    .style(\"pointer-events\", \"none\")\n    .attr(\"transform\", (d) => `scale(${d.scale ? d.scale : 1})`)\n    .style(\"opacity\", 0.8)\n    .attr(\"width\", (d) => imageSize * (d.aspect > 1 ? 1 : 1 / d.aspect))\n    .attr(\"height\", (d) => imageSize * (d.aspect <= 1 ? 1 : d.aspect))\n    .attr(\"x\", (d) =>\n      d.aspect > 1\n        ? imageSize / -2\n        : `${-(d.width / 2) / (d.height / imageSize)}`\n    )\n    .attr(\"y\", (d) =>\n      d.aspect <= 1\n        ? imageSize / -2\n        : `${-(d.height / 2) / (d.width / imageSize)}`\n    );\n\n  node.append(\"title\").text((d) => d.title);\n}\n\n\n\n\n\n\n\nrenderBlurb = ({ title, link, description }) => {\n  const linksModified = (description || \"\").replace(\n    /\\[(.*?)\\]\\((.*?)\\)/g,\n    (match, name, url) => `<a href=\"${url}\" target=\"_blank\">${name}</a>`\n  );\n\n  return html`\n    <div style=\"user-select: ${hostedOnThumbtools() ? \"none\" : \"auto\"};\">\n    <!-- h2 style=\"${isMoble ? \"font-size: 2.1em;\" : \"\"}\">\n      ${link ? `<a href=\"${link}\" target=\"_blank\">${title}</a>` : title}\n      ${\n        link\n          ? `<a class=\"more-link\" style=\"color: rgba(184, 67, 61, 1); font-size: 0.6em; padding-left: 8px;\" href=\"${link}\" target=\"_blank\">See More</a>`\n          : \"\"\n      }\n     </h2 -->\n\n    <h2 style=\"font-size: 3.9vmin\">\n      ${link ? `<a href=\"${link}\" target=\"_blank\">${title}</a>` : title}\n      ${\n        link\n          ? `<a class=\"more-link\" style=\"color: rgba(184, 67, 61, 1); font-size: 0.6em; padding-left: 8px;\" href=\"${link}\" target=\"_blank\">See More</a>`\n          : \"\"\n      }\n     </h2>\n\n    <!-- div style=\"${\n      isMoble\n        ? \"font-size: 2.1em; line-height: 1em;\"\n        : \"font-size: 0.6m; line-height: 1.3em;\"\n    }\"\n    >\n      ${linksModified}\n    </div -->\n\n    <div style=\"${\n      isMoble\n        ? \"font-size: 3.4vmin; line-height: 3.6vmin;\"\n        : \"font-size: 2.1vmin; line-height: 2.3vmin;\"\n    }\"\n    >\n      ${linksModified}\n    </div>\n\n    <!-- div style=\"font-size: 2.6vmin; line-height: 3vmin;\">\n      ${linksModified}\n    </div -->\n\n  </div>`;\n}\n\n\n\n\n\n\n\ndrag = simulation => {\n  \n  function dragstarted(d) {\n    if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n    d.fx = d.x;\n    d.fy = d.y;\n  }\n  \n  function dragged(d) {\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n  }\n  \n  function dragended(d) {\n    if (!d3.event.active) simulation.alphaTarget(0);\n    d.fx = null;\n    d.fy = null;\n  }\n  \n  return d3.drag()\n      .on(\"start\", dragstarted)\n      .on(\"drag\", dragged)\n      .on(\"end\", dragended);\n}\n\n\n\n\n\n\n\nisMoble = {\n// device detection\nif(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) \n    || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))) { \n    return true;\n}\n  return false;\n}\n\n\n\n\n\n\n\nheight = {\n  const body = document.body;\n  const doc = document.documentElement;\n  return Math.max(\n      body.scrollHeight, body.offsetHeight,\n      doc.clientHeight, doc.scrollHeight, doc.offsetHeight);\n}\n\n\n\n\n\n\n\nmaxDepth = {\n    function findDepth(node, depth = 0) {\n    if (!node.children || node.children.length === 0) {\n      return depth;\n    }\n    \n    return d3.max(node.children.map(child => findDepth(child, depth + 1)));\n  }\n\n  return findDepth(tree);\n}\n\n\n\n\n\n\n\nimageSizeMap = {\n  const collectNodes = node => _.flatten([node, ...(node.children ? node.children.map(collectNodes) : [])]);\n  \n  return collectNodes(tree)\n    .filter(d => d.img)\n    .map(({ title, img }) => {\n      const params = img\n        .split('=')[1]\n        .split('-')\n        .reduce((map, param) => {\n          map[param[0]] = param.slice(1);\n          return map;\n        }, {});\n    \n        const width = +(params['w'] || params['s']);\n        const height= +(params['h'] || params['s']);\n\n        return ({\n          title,\n          params, \n          width,\n          height,\n          aspect: height / width,\n        });\n    })\n    .reduce((map, size) => ({...map, [size.title]: size }), {});\n}\n\n\n\n\n\n\n\ngraphData = {\n  const nodes = [];\n  const links = [];\n  let id = 0;\n  const collect = (node, depth = 0) => {\n    nodes.push({...imageSizeMap[node.title], ...node, depth, id: id++, ...(isMoble ? {group: 'all'} : {})});\n    if (!node.children) return [];\n    return node.children.forEach(child => {\n      links.push({\n        source: node.title,\n        target: child.title,\n      });\n      collect(child, depth + 1);\n    });\n  }\n   \n  collect(tree);\n  return { nodes, links };\n}\n\n\n\n\n\n\n\ntree = ({\n  title: \"Learning - Themes\",\n  group: \"root\",\n  scale: 0.94,\n  description:\n    \"Welcome to [Learning Themes](https://github.com/vanHeemstraSystems/learning-themes)\",\n  img:\n    \"iVBORw0KGgoAAAANSUhEUgAAAXUAAAAwCAYAAADuH+qjAAAAAXNSR0IArs4c6QAAE/xJREFUeF7tnQXMXTUbx58xAgzCCO4aCBDcGe4DhgZ3xnCX4TJ0WIYOd9fg7jCGu1vQ4AMCBNgIsC+/fvTS27ftaa+cK2+bkLD3ntPTPm3/jz/tM378+PHyb7vuuutk22231f+UgQMHCn+beuqpK3/L/9P5FPjhhx9km222kQcffFBNZpFFFpGbbrpJ5p133s6fXBNmYJ+LJnyi0uXxxx8vRx99dOXfo0ePlhVWWKHy7912203OPPNM6devXzOHkfvuYAr0yaDewatX49AzqKcRLoN6Gr3y062lQAb11tK/JV/PoJ5G9gzqafTKT7eWAhnUW0v/lnw9g3rzyP7+++/LFltsIa+//nrlI08//bQsv/zyNX00m19qIluvfimDeq9e/jz5RlMgg3qjKZr7S6VABvVUiuXnMwUCFMignrdHqymQQb3VK5C/31UUyKDeVcvZkZPJoN6Ry5YH3a4UyKDerivTe8bVVqD+yy+/yKhRo+TWW29VjqZXX31VrcTss8+uYqlXXXVV2WijjdS/+/TpU/Mq/fTTT/LMM8/Ik08+KS+99JL61o8//ljpb9lll5X55ptPxemvttpqMt100xV+648//pADDjhALrroIvWsGeP/6aefyjnnnCO33XabfPbZZ7LYYovJiiuuKJtvvrkss8wyMuGEE0roffqDNvfdd5/ceeedii6AB42xLr300lV9FQ02xVFqO+quvfZaFeNO++eff+Sdd95RMe7Q8rXXXpNff/21sl6DBg1S6xVDP9+Yv/zyS7nrrrvkgQceUOsE/aaaaipZbrnlZP3116/q355XK2K6ywR1Ukw++OADtSceeugheeGFFxT9NX3WXXdd2WCDDWTmmWcu2hLe31lj5nT33XfLY489Ji+++GLlrLD3Fl98cdlwww3Vfo6NnS9ap88//1xuvPHGqjlx5jkrG2+8sTCv/v379xizuR8feeQRee6559QznLclllhCdtxxx8p5q4UgzcYnxg9WsN8ff/zxyn5nrOSQzD///LLyyisrbOHfE0wwgXMabQHqv/32m1x88cVy4oknVoGrj/Dbb7+9HHfccTLHHHMkrQ0EGzFihFx11VVq88e0ySefXPbcc0856KCDZNppp/W+4gJlAPCp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\",\n  children: [\n    {\n      title: \"Transparency Report\",\n      link: \"https://transparency.twitter.com/\",\n      group: \"trans\",\n      description:\n        \"This report summarizes legal requests received by Twitter and is updated twice a year.  I created all the interactive visual components and engineered them to support future report data without code changes.\",\n      img:\n        \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=\",\n      children: [\n        {\n          title: \"Removal Requests\",\n          link: \"https://transparency.twitter.com/en/removal-requests.html\",\n          group: \"trans\",\n          description:\n            \"This section shows requests received by Twitter to remove content, and the percentage of those requests granted, broken down by country.  Small countries are zoomed in on the map or would otherwise be too small to see.  Also, the underlying map data is specially treated to reduce data weight.\",\n          img:\n            \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=\"\n        },\n        {\n          title: \"Information Requests\",\n          link: \"https://transparency.twitter.com/en/information-requests.html\",\n          group: \"trans\",\n          description:\n            \"This section shows requests for private account information.  On the map, you can click on the US, and the map will zoom smoothly from a worldwide [Robinson](https://en.wikipedia.org/wiki/Robinson_projection) to an [Albers](https://en.wikipedia.org/wiki/Albers_projection) USA projection to breakdown requests by US state.\",\n          url: \"https://transparency.twitter.com/en/information-requests.html\",\n          img:\n            \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=\"\n        },\n        {\n          title: \"Copyright notices\",\n          link: \"https://transparency.twitter.com/en/copyright-notices.html\",\n          group: \"trans\",\n          description:\n            \"This section reports on requests to remove content that might infringe copyright.  This stream graph shows the increase in [DMCA](https://en.wikipedia.org/wiki/Digital_Millennium_Copyright_Act) takedown notices over time.\",\n          img:\n            \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=\"\n        }\n      ]\n    },\n    {\n      title: \"Nexus Navigator\",\n      group: \"nn\",\n      description:\n        \"The Nexus Navigator is a tool I built to investigate interactions between relatively small sets of Twitter users to highlight patterns of behavior.  The interactions are presented as a graph in the center, with filters on the left, selected interactions on the right and a timeline at the bottom.\",\n      img:\n        \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=\",\n      children: [\n        {\n          title: \"Relationship Detail\",\n          group: \"nn\",\n          description:\n            \"The graph shows interactions between users.  Where possible users are bundled into groups that may be interactively expanded.  The interaction types and counts are encoded into edge shape, color and thickness.\",\n          img:\n            \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=\"\n        },\n        {\n          title: \"Event Timeline\",\n          group: \"nn\",\n          description:\n            \"Events are summarized into a timeline to show activity peaks. When the user hovers over graph nodes or edges, the relevant events are highlighted here.\",\n          img:\n            \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=\"\n        }\n      ]\n    },\n    {\n      title: \"US Presidential Candidate Twitter Buzz\",\n      _link: \"https://interactive.twitter.com/candidateRace16/\",\n      group: \"race\",\n      description:\n        \"This interactive was published leading up to the 2016 election, and updated regularly.  Initially, it shows candidates ranked by buzz on Twitter and indicates when each candidate dropped out of the race.  If you mouse over the primaries and debates you can see who participated in which.\",\n      img:\n        \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=\",\n      children: [\n        {\n          title: \"A Proportional View\",\n          _link:\n            \"https://interactive.twitter.com/candidateRace16/?metric=proportion&state=AR&status=active\",\n          group: \"race\",\n          description:\n            \"The UI provides filters, selectors, and the option to animate the race.  Shown here are how the final three candidates fared in Arkansas, proportionally, rather than by rank.\",\n          img:\n            \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=\"\n        }\n      ]\n    },\n    {\n      title: \"User Cohort Flow\",\n      group: \"flow\",\n      description:\n        \"This chart shows the flow between different segments of Twitter users.  This internal tool was used to measure the health of various markets.  In this view, the numbers on the edges show the difference from one time period to the next.  It was also possible to show the difference between two countries to measure relative health.  The color-coding on the edges highlight segments which are in trouble.\",\n      img:\n        \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=\"\n    },\n    {\n      title: \"Emoji Use on Twitter\",\n      group: \"fun\",\n      description:\n        \"I have had a chance to work on a number of more whimsical projects. For example, this is a prototype to show emoji use on Twitter, though it was not published.  A simple [ordered list](https://twitter.com/twitterdata/status/673905956909133824) was chosen instead.  I thought my treatment was fun if a little busy.\",\n      img:\n        \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=\",\n      children: [\n        {\n          title: \"Twitter New Year's Eve 2012\",\n          group: \"fun\",\n          link:\n            \"https://blog.twitter.com/official/en_us/a/2013/celebrating-2013-in-the-global-town-square.html\",\n          description:\n            'This static visualization overlays the tweets per second during New Year’s Day 2012 on a globe centered on the north pole.  It is arranged such that each \"midnight spike\" is aligned with the geography from which those tweets would likely come.  It was discussed here on Reddit\\'s [Data Is Beautiful](https://www.reddit.com/r/dataisbeautiful/comments/15u2jy/tweets_per_second_on_nye_around_the_globe/).  I wish I had chosen better colors.',\n          img:\n            \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=\"\n        },\n        {\n          title: \"Live Geographic Aggregation\",\n          group: \"fun\",\n          description:\n            \"Here recent tweets from the [firehose](https://developer.twitter.com/en/docs/tweets/sample-realtime/overview/decahose.html) were grouped by hashtag or @handle, then rendered onto an ever zooming, scaling map.  Sporting events, conferences, earthquakes, and even rainbows would be highlighted.  A small time-series plot at the top of the screen showed the event trend.\",\n          img:\n            \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=\"\n        }\n      ]\n    },\n    {\n      title: \"Twitter Flight 2015\",\n      link:\n        \"https://blog.twitter.com/developer/en_us/a/2015/join-us-at-twitter-flight-2015.html\",\n      group: \"flight\",\n      description:\n        'This visualization, created for [Twitter Flight 2015](https://blog.twitter.com/developer/en_us/a/2015/join-us-at-twitter-flight-2015.html), used tweets from the [firehose](https://developer.twitter.com/en/docs/tweets/sample-realtime/overview/decahose.html).  Hashtags and @handles mentioned together in the same tweet were used to create a weighted \"co-mention\" graph.  Periodically a [minimum spanning tree](https://en.wikipedia.org/wiki/Minimum_spanning_tree) was extracted from the graph and used to update the display.',\n      img:\n        \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=\",\n      children: [\n        {\n          title: \"With Cats\",\n          group: \"flight\",\n          description:\n            \"The [linked tweet](https://twitter.com/TwitterDev/status/656534589687500800) shows how the visualization looked live with tweets filtered with the hashtag [#CATS](https://twitter.com/search?q=%23CATS&src=typd).  The actual cats were added by [Twitter Comms](https://twitter.com/TwitterComms).\",\n          link: \"https://twitter.com/TwitterDev/status/656534589687500800\",\n          img:\n            \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=\"\n        }\n      ]\n    }\n  ]\n})\n\n\n\n\n\n\n\nimport { hostedOnThumbtools } from \"@trebor/thumbtools\"\n\n\n\n\n\n\n\nimport {color} from \"@jashkenas/inputs\"\n\n\n\n\n\n\n\nd3 = require('d3@5')\n\n\n\n\n\n\n\n_ = require('lodash')\n\n\n\n\n\n\n\nWAMediaBox = {\n  const url = 'https://raw.githubusercontent.com/trebor/wa-mediabox/master/src/wa-mediabox.js';\n  const response = await fetch(url);\n  const blob = await response.blob();\n  return require(URL.createObjectURL(blob)).catch(() => window.WAMediaBox);\n}\n\n\n\n\n\n\n\nMaster Automation"
  }
]